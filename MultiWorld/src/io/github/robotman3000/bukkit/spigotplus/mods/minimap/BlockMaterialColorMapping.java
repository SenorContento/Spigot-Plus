package io.github.robotman3000.bukkit.spigotplus.mods.minimap;

public enum BlockMaterialColorMapping {
    AIR(0, (byte) 119),
    STONE(1, (byte) 46),
    GRASS(2, (byte) 6),
    DIRT(3, (byte) 42),
    COBBLESTONE(4, (byte) 46),
    WOOD(5, (byte) 54),
    SAPLING(6, (byte) 30),
    BEDROCK(7, (byte) 46),
    WATER(8, (byte) 50),
    STATIONARY_WATER(9, (byte) 50),
    LAVA(10, (byte) 18),
    STATIONARY_LAVA(11, (byte) 18),
    SAND(12, (byte) 10),
    GRAVEL(13, (byte) 46),
    GOLD_ORE(14, (byte) 46),
    IRON_ORE(15, (byte) 46),
    COAL_ORE(16, (byte) 46),
    LOG(17, (byte) 54),
    LEAVES(18, (byte) 30),
    SPONGE(19, (byte) 74),
    GLASS(20, (byte) 119),
    LAPIS_ORE(21, (byte) 46),
    LAPIS_BLOCK(22, (byte) -126),
    DISPENSER(23, (byte) 46),
    SANDSTONE(24, (byte) 10),
    NOTE_BLOCK(25, (byte) 54),
    BED_BLOCK(26, (byte) 14),
    POWERED_RAIL(27, (byte) 119),
    DETECTOR_RAIL(28, (byte) 119),
    PISTON_STICKY_BASE(29, (byte) 46),
    WEB(30, (byte) 14),
    LONG_GRASS(31, (byte) 30),
    DEAD_BUSH(32, (byte) 54),
    PISTON_BASE(33, (byte) 46),
    PISTON_EXTENSION(34, (byte) 46),
    WOOL(35, (byte) 34),
    PISTON_MOVING_PIECE(36, (byte) 46),
    YELLOW_FLOWER(37, (byte) 30),
    RED_ROSE(38, (byte) 30),
    BROWN_MUSHROOM(39, (byte) 30),
    RED_MUSHROOM(40, (byte) 30),
    GOLD_BLOCK(41, (byte) 122),
    IRON_BLOCK(42, (byte) 26),
    DOUBLE_STEP(43, (byte) 46),
    STEP(44, (byte) 46),
    BRICK(45, (byte) 114),
    TNT(46, (byte) 18),
    BOOKSHELF(47, (byte) 54),
    MOSSY_COBBLESTONE(48, (byte) 46),
    OBSIDIAN(49, (byte) 118),
    TORCH(50, (byte) 119),
    FIRE(51, (byte) 18),
    MOB_SPAWNER(52, (byte) 46),
    WOOD_STAIRS(53, (byte) 54),
    CHEST(54, (byte) 54),
    REDSTONE_WIRE(55, (byte) 119),
    DIAMOND_ORE(56, (byte) 46),
    DIAMOND_BLOCK(57, (byte) 126),
    WORKBENCH(58, (byte) 54),
    CROPS(59, (byte) 30),
    SOIL(60, (byte) 42),
    FURNACE(61, (byte) 46),
    BURNING_FURNACE(62, (byte) 46),
    SIGN_POST(63, (byte) 54),
    WOODEN_DOOR(64, (byte) 54),
    LADDER(65, (byte) 119),
    RAILS(66, (byte) 119),
    COBBLESTONE_STAIRS(67, (byte) 46),
    WALL_SIGN(68, (byte) 54),
    LEVER(69, (byte) 119),
    STONE_PLATE(70, (byte) 46),
    IRON_DOOR_BLOCK(71, (byte) 26),
    WOOD_PLATE(72, (byte) 54),
    REDSTONE_ORE(73, (byte) 46),
    GLOWING_REDSTONE_ORE(74, (byte) 46),
    REDSTONE_TORCH_OFF(75, (byte) 119),
    REDSTONE_TORCH_ON(76, (byte) 119),
    STONE_BUTTON(77, (byte) 119),
    SNOW(78, (byte) 34),
    ICE(79, (byte) 22),
    SNOW_BLOCK(80, (byte) 34),
    CACTUS(81, (byte) 30),
    CLAY(82, (byte) 38),
    SUGAR_CANE_BLOCK(83, (byte) 30),
    JUKEBOX(84, (byte) 42),
    FENCE(85, (byte) 54),
    PUMPKIN(86, (byte) 62),
    NETHERRACK(87, (byte) -114),
    SOUL_SAND(88, (byte) 106),
    GLOWSTONE(89, (byte) 10),
    PORTAL(90, (byte) 119),
    JACK_O_LANTERN(91, (byte) 62),
    CAKE_BLOCK(92, (byte) 119),
    DIODE_BLOCK_OFF(93, (byte) 119),
    DIODE_BLOCK_ON(94, (byte) 119),
    STAINED_GLASS(95, (byte) 34),
    TRAP_DOOR(96, (byte) 54),
    MONSTER_EGGS(97, (byte) 38),
    SMOOTH_BRICK(98, (byte) 46),
    HUGE_MUSHROOM_1(99, (byte) 42),
    HUGE_MUSHROOM_2(100, (byte) 114),
    IRON_FENCE(101, (byte) 26),
    THIN_GLASS(102, (byte) 119),
    MELON_BLOCK(103, (byte) 78),
    PUMPKIN_STEM(104, (byte) 30),
    MELON_STEM(105, (byte) 30),
    VINE(106, (byte) 30),
    FENCE_GATE(107, (byte) 54),
    BRICK_STAIRS(108, (byte) 114),
    SMOOTH_STAIRS(109, (byte) 46),
    MYCEL(110, (byte) 98),
    WATER_LILY(111, (byte) 30),
    NETHER_BRICK(112, (byte) -114),
    NETHER_FENCE(113, (byte) -114),
    NETHER_BRICK_STAIRS(114, (byte) -114),
    NETHER_WARTS(115, (byte) 114),
    ENCHANTMENT_TABLE(116, (byte) 114),
    BREWING_STAND(117, (byte) 26),
    CAULDRON(118, (byte) 46),
    ENDER_PORTAL(119, (byte) 118),
    ENDER_PORTAL_FRAME(120, (byte) 110),
    ENDER_STONE(121, (byte) 10),
    DRAGON_EGG(122, (byte) 118),
    REDSTONE_LAMP_OFF(123, (byte) 119),
    REDSTONE_LAMP_ON(124, (byte) 119),
    WOOD_DOUBLE_STEP(125, (byte) 54),
    WOOD_STEP(126, (byte) 54),
    COCOA(127, (byte) 30),
    SANDSTONE_STAIRS(128, (byte) 10),
    EMERALD_ORE(129, (byte) 46),
    ENDER_CHEST(130, (byte) 46),
    TRIPWIRE_HOOK(131, (byte) 119),
    TRIPWIRE(132, (byte) 119),
    EMERALD_BLOCK(133, (byte) -122),
    SPRUCE_WOOD_STAIRS(134, (byte) -118),
    BIRCH_WOOD_STAIRS(135, (byte) 10),
    JUNGLE_WOOD_STAIRS(136, (byte) 42),
    COMMAND(137, (byte) 106),
    BEACON(138, (byte) 126),
    COBBLE_WALL(139, (byte) 46),
    FLOWER_POT(140, (byte) 119),
    CARROT(141, (byte) 30),
    POTATO(142, (byte) 30),
    WOOD_BUTTON(143, (byte) 119),
    SKULL(144, (byte) 119),
    ANVIL(145, (byte) 26),
    TRAPPED_CHEST(146, (byte) 54),
    GOLD_PLATE(147, (byte) 122),
    IRON_PLATE(148, (byte) 26),
    REDSTONE_COMPARATOR_OFF(149, (byte) 119),
    REDSTONE_COMPARATOR_ON(150, (byte) 119),
    DAYLIGHT_DETECTOR(151, (byte) 54),
    REDSTONE_BLOCK(152, (byte) 18),
    QUARTZ_ORE(153, (byte) -114),
    HOPPER(154, (byte) 46),
    QUARTZ_BLOCK(155, (byte) 58),
    QUARTZ_STAIRS(156, (byte) 58),
    ACTIVATOR_RAIL(157, (byte) 119),
    DROPPER(158, (byte) 46),
    STAINED_CLAY(159, (byte) 34),
    STAINED_GLASS_PANE(160, (byte) 34),
    LEAVES_2(161, (byte) 30),
    LOG_2(162, (byte) 62),
    ACACIA_STAIRS(163, (byte) 62),
    DARK_OAK_STAIRS(164, (byte) 106),
    SLIME_BLOCK(165, (byte) 6),
    BARRIER(166, (byte) 119),
    IRON_TRAPDOOR(167, (byte) 26),
    PRISMARINE(168, (byte) 94),
    SEA_LANTERN(169, (byte) 58),
    HAY_BLOCK(170, (byte) 74),
    CARPET(171, (byte) 34),
    HARD_CLAY(172, (byte) 62),
    COAL_BLOCK(173, (byte) 118),
    PACKED_ICE(174, (byte) 22),
    DOUBLE_PLANT(175, (byte) 30),
    STANDING_BANNER(176, (byte) 54),
    WALL_BANNER(177, (byte) 54),
    DAYLIGHT_DETECTOR_INVERTED(178, (byte) 54),
    RED_SANDSTONE(179, (byte) 62),
    RED_SANDSTONE_STAIRS(180, (byte) 62),
    DOUBLE_STONE_SLAB2(181, (byte) 62),
    STONE_SLAB2(182, (byte) 62),
    SPRUCE_FENCE_GATE(183, (byte) -118),
    BIRCH_FENCE_GATE(184, (byte) 10),
    JUNGLE_FENCE_GATE(185, (byte) 42),
    DARK_OAK_FENCE_GATE(186, (byte) 106),
    ACACIA_FENCE_GATE(187, (byte) 62),
    SPRUCE_FENCE(188, (byte) -118),
    BIRCH_FENCE(189, (byte) 10),
    JUNGLE_FENCE(190, (byte) 42),
    DARK_OAK_FENCE(191, (byte) 106),
    ACACIA_FENCE(192, (byte) 62),
    SPRUCE_DOOR(193, (byte) -118),
    BIRCH_DOOR(194, (byte) 10),
    JUNGLE_DOOR(195, (byte) 42),
    ACACIA_DOOR(196, (byte) 62),
    DARK_OAK_DOOR(197, (byte) 106),
    END_ROD(198, (byte) 119),
    CHORUS_PLANT(199, (byte) 30),
    CHORUS_FLOWER(200, (byte) 30),
    PURPUR_BLOCK(201, (byte) 46),
    PURPUR_PILLAR(202, (byte) 46),
    PURPUR_STAIRS(203, (byte) 46),
    PURPUR_DOUBLE_SLAB(204, (byte) 46),
    PURPUR_SLAB(205, (byte) 46),
    END_BRICKS(206, (byte) 46),
    BEETROOT_BLOCK(207, (byte) 30),
    GRASS_PATH(208, (byte) 42),
    END_GATEWAY(209, (byte) 118),
    COMMAND_REPEATING(210, (byte) 98),
    COMMAND_CHAIN(211, (byte) 110),
    FROSTED_ICE(212, (byte) 22),
    STRUCTURE_BLOCK(255, (byte) 90);
	
    private int blockID;
	private byte colorID;

	protected final int getBlockID() {
		return blockID;
	}

	protected final byte getColorID() {
		return colorID;
	}

	private BlockMaterialColorMapping(int blockID, byte colorID) {
		this.blockID = blockID;
		this.colorID = colorID;
	}
	
	public static BlockMaterialColorMapping getBlockForName(String id){
		for(BlockMaterialColorMapping map : values()){
			if(map.name().equalsIgnoreCase(id)){
				return map;
			}
		}
		return BlockMaterialColorMapping.AIR;
	}

	public static BlockMaterialColorMapping getBlockForID(int id) {
		for(BlockMaterialColorMapping map : values()){
			if(map.getBlockID() == id){
				return map;
			}
		}
		return BlockMaterialColorMapping.AIR;
	}
}